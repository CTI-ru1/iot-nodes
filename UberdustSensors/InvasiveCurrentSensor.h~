#ifndef INVASIVECURRENT_SENSOR
#define INVASIVECURRENT_SENSOR

#include <CoapSensor.h>
#include "EmonLib.h"
//#define NUMBER_OF_SAMPLES 148
//#define ICAL 15

EnergyMonitor emon1;

class InvasiveCurrentSensor: 
public CoapSensor 
{
public:
  int status,pin;
unsigned long timestamp;
  InvasiveCurrentSensor (char * name,int pin): 
  CoapSensor(name)
  {
   // this->emon=emon1;
    this->pin=pin;    
    timestamp = 0;
    this->status=0;
    this->set_notify_time(30);
    //this->emon=emon1;	
 emon1.current(this->pin,30);
  }

  void get_value( uint8_t* output_data, size_t* output_data_len)
  {
    *output_data_len = sprintf( (char*)output_data, "%d", this->status); 
  }

  void check(void)
  {
    if(millis() - timestamp > 5000)
    {
	double Irms=emon1.calcIrms(1470);
	  this->status=(int)(Irms*1000);
	    timestamp=millis();
  }
  

}

	
};
#endif
